# 2차원 list 입력받기
    # n행 m열

    # 1 내가 평소에 쓰던 방식 예시2
'''
n, m = map(int, input().split())

mylist = []

for i in range(n):
    mylist.append(list(map(int, input().split())))

print(mylist)
'''
    # 강의 예시 1
'''
n, m = map(int, input().split())

mylist = [0 for i in range(n)]

for i in range(n):
    mylist[i] = list(map(int, input().split()))

'''
    # 강의 예시 3
'''
n, m = map(int, input().split())
mylist=[list(map(int, input().split())) for i in range(n)]
'''

# 원하는 데이터의 위치 찾기
'''
list1 = [[0,1,0,0], [1,1,0,0], [0,0,0,1]]

for n in range(len(list1)):
    for m in range(len(list1[n])):
        if list1[n][m]==1:
            print(n,m)
'''

    # 리스트 순회
    #방법1 : 행 우선순회
    #방법2 : 열 우선순회
    #방법3 : 지그재그 순회 ** 이것만 적어봄
list1 = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
'''
for i in range(len(list1)):
    for j in range(len(list1[i])):
        z=j+(len(list1[i])-1-2*j)*(i%2) #i%2= 짝수행일때는 정방향, 홀수행일때는 역방향으로 간다.
                                        #홀수일때 j-2j를 함으로써 길이 끝에서 부터 -j하게끔 설정함.
        print('z=',z)
        print(list1[i][z])
'''
    #델타를 이용한 2차 List 탐색
# [상,하,좌,우]
'''
dx = [0,0,-1,1]
dy = [-1,1,0,0]

for x in range(len(list1)):
    for y in range(len(list1[x])):
        for i in range(1):
            testX=x+dx[i]
            testY=y+dy[i]
            print(list1[testX][testY])
'''
    #전치 행렬 (행과 열의 값을 바꾸는 것)
#i:행의 좌표, len(arr), j:열의좌표,len(arr[0])
'''
arr=[[1,2,3],[4,5,6],[7,8,9]]
for i in range(len(arr)):
    for j in range(len(arr[i])):
        if i < j:
            arr[i][j], arr[j][i] = arr[j][i], arr[i][j] 
print(arr)
'''

# zip 함수  : zip(iterable*) = 동일한 개수로 이루어진 자료형을 묶어 주는 역할을 하는 함수
arr=[[1,2,3],[4,5,6],[7,8,9]]
print(list(zip(*arr)))
