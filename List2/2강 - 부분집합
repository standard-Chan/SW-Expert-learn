#부분집합

set1 = {1,2,3,4,5}
list1 = list(set1)

    # 중복순열로 부분집합 만들기
bit = [0,0,0,0]
for i in range(2):
    bit[0]=i
    for j in range(2):
        bit[1]=j
        for k in range(2):
            bit[2]=k
            for l in range(2): # 여기까지 중복순열
                bit[3]=l
                list2=[]
                for index in range(4):
                    if bit[index] == 1:
                        list2.append(list1[index])
                print(list2)
               


    # 비트연산자 : 01로 이루어진 이진수에 대한 연산자
'''
& : 비트단위 AND
| : 비트단위 OR
>>: 비트열을 왼쪽으로 이동
<<: 비트열을 오른쪽으로 이동
'''
    # 비트연산자를 활용하여 부분집합 생성
arr=[3,6,7,1,5,4]
n=len(arr)

for i in range(1<<n): # 1<<n: 부분집합의 개수 1<<n=2^n
    for j in range(n): # 원소의 수만큼 비트를 비교
        if i&(1<<j): #i의 j번째 비트가 1이면 j번째 원소 출력
            print(arr[j], end=",")
    print()
        

